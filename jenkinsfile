pipeline {
    agent any
    environment {
        REPORT_DIR = 'reports' 
    }
    stages {
        stage('Setup') {
            steps {
                script {
                    echo 'Setting up the environment...'
                }
            }
        }
        stage('Build Docker Images') {
            steps {
                echo 'Building Docker Images...'
                bat 'docker-compose -f docker-compose.yml build'
            }
        }
        stage('Install Dependencies') {
            steps {
                bat """
                    docker run --rm -v %WORKSPACE%\\svm_service:/app devops-app/svm-service:latest ^
                        pip install -r /app/requirements.txt
                """
                bat """
                    docker run --rm -v %WORKSPACE%\\vgg19_service:/app devops-app/vgg19-service:latest ^
                        pip install -r /app/requirements.txt
                """
            }
        }
        stage('Run Tests') {
            steps {
                echo 'Running tests for SVM Service located at /app/tests/test_svm.py'    
                bat """
                    docker run --rm -v "%WORKSPACE%/SVM_service:/app" -v "%WORKSPACE%/reports:/reports" devops-app/svm-service:latest ^
                        bash -c "export PYTHONPATH=/app && python /app/tests/test_svm.py"
                """
                echo 'Finished running unit tests for SVM Service. Check reports/test_svm_results.xml for output.'

                echo 'Running tests for VGG19 Service located at /app/tests/test_vgg.py'
                bat """
                    docker run --rm -v "%WORKSPACE%/VGG19_service:/app" -v "%WORKSPACE%/reports:/reports" devops-app/vgg19-service:latest ^
                        bash -c "export PYTHONPATH=/app && python /app/tests/test_vgg.py"
                """
                echo 'Finished running unit tests for VGG19 Service. Check reports/test_vgg_results.xml for output.'
            }
        }
        stage('Verify Test Reports') {
            steps {
                echo 'Checking if test reports were generated...'
                bat 'dir %WORKSPACE%\\reports'
            }
        }
        stage('Start Services') {
            steps {
                echo 'Starting all services...'
                bat 'docker-compose -f docker-compose.yml up -d'
            }
        }
        stage('Publish Test Results') {
            steps {
                script {
                    echo 'Publishing test results...'
                    junit 'reports/*.xml' 
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
        }
    }
}
